name: Kubespray image build

on:
  workflow_call:
    inputs:
      SPRAY_REF:
        required: true
        type: string
      REPO:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      SPRAY_REF:
        required: true
        type: string
      REPO:
        required: true
        type: string
        default: kubean-io
jobs:
  output-variable:
    runs-on: ubuntu-latest
    outputs:
      image_tag_short_sha: ${{ steps.output_variables.outputs.image_tag_short_sha }}

    steps:
    - name: output environment variable
      id: output_variables
      run: |
        INPUTS_SPRAY_REF=${{ inputs.SPRAY_REF }}
        SPRAY_SHA=`git ls-remote https://github.com/kubernetes-sigs/kubespray.git ${INPUTS_SPRAY_REF} | awk '{ print $1}'`
        if [[ -z "${SPRAY_SHA}" ]];then
          if (( ${#INPUTS_SPRAY_REF} != 40 ));then
            echo "The sha length of the commit must be 40"
            exit 1
          fi
          SPRAY_SHA=${INPUTS_SPRAY_REF}
        fi
        echo image_tag_short_sha=$(echo ${SPRAY_SHA} | cut -c 1-7) >> $GITHUB_OUTPUT

  build-kubespray-image:
    needs: output-variable
    runs-on: ubuntu-latest
    steps:
    - name: Checks if a image with the same tag exists
      id: check
      run: |
        echo "need_rebuild=true" >>$GITHUB_OUTPUT
        commit_short_sha=${{ needs.output-variable.outputs.image_tag_short_sha }}
        ghcr_token=$(curl https://ghcr.io/token\?scope\="repository:${{ inputs.REPO }}/kubespray:pull" | jq '.token' | tr -d '"')
        skopeo list-tags --registry-token ${ghcr_token} docker://ghcr.io/${{ inputs.REPO }}/kubespray | jq '.Tags' | tr -d '[",]' > tags
        if grep -q ${commit_short_sha} tags; then
          echo "need_rebuild=false" >>$GITHUB_OUTPUT
        fi

    - uses: actions/checkout@v4
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      with:
        fetch-depth: 0

    - name: Set up QEMU
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      uses: docker/setup-buildx-action@v3.0.0

    - name: Login to GitHub Container Registry
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: kubespray base image build
      if: ${{ steps.check.outputs.need_rebuild == 'true' }}
      uses: docker/build-push-action@v5.1.0
      with:
        context: ./
        file: build/images/kubespray/Dockerfile
        build-args: |
          SPRAY_REF=${{ inputs.SPRAY_REF }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push: true
        provenance: false
        platforms: linux/amd64,linux/arm64
        tags: |
          ghcr.io/${{ inputs.REPO }}/kubespray:${{ needs.output-variable.outputs.image_tag_short_sha }}
          ghcr.io/${{ inputs.REPO }}/kubespray:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
